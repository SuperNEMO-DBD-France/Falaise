# -*- mode: conf-unix; -*-
# @falaise:config/snemo/demonstrator/simulation/vertexes/4.2/variants/gdm.conf (format: datatools::properties)

#@config The dependency model of the variant configuration parameters for the 'vertexes' repository

# This  dependency  model  aims   to  express  long  range  dependency
# relationships between "variant" objects defined in different variant
# registries.  Here some vertex and  primary event generators are only
# available (and  thus selectable)  if some specific  geometry options
# are  activated.   This is  done  by  making  some groups  of  values
# depending of some variants.

#@description Logging priority
logging.priority : string = "fatal"


#############
# Dependees #
#############

#@description List of dependee slots
dependees.slots : integer[6] = 0 1 2 3 4 5

#@description Dependee at slot #0
dependees.slot_0.variant : string = "geometry:layout/if_half_commissioning"

#@description Dependee at slot #1
dependees.slot_1.variant : string = "geometry:layout/if_basic/source_calibration/is_active"

#@description Dependee at slot #2
dependees.slot_2.variant : string = "geometry:layout/if_basic/shielding/is_on"

#@description Dependee at slot #3
dependees.slot_3.variant : string = "geometry:layout/if_basic"

#@description Dependee at slot #4
dependees.slot_4.variant : string = "geometry:layout/if_half_commissioning/granularity/if_low"

#@description Dependee at slot #5
dependees.slot_5.variant : string = "geometry:layout/if_half_commissioning/granularity/if_high"


################
# Dependencies #
################


#@description List of dependencies
dependencies : string[7] = \
  "CalibrationVtxDep" \
  "HalfCommissioningVtxDep" \
  "ShieldingVtxDep" \
  "SourceVtxDep" \
  "Tracker1VtxDep" \
  "HalfCommissioningVtxSpotLowDep" \
  "HalfCommissioningVtxSpotHighDep"

# Note:
# The vertex generator group 'Calibration' is only enabled if the calibration sources
# are set in the geometry.

#@description Depender of dependency "CalibrationVtxDep"
dependencies.CalibrationVtxDep.depender : string     = "vertexes:generator@Calibration"

#@description Input dependee slots of dependency "CalibrationVtxDep"
dependencies.CalibrationVtxDep.slots    : integer[1] = 1

#@description Logic formula of dependency "CalibrationVtxDep"
dependencies.CalibrationVtxDep.logic    : string     = "[1]"

# Note:
# The vertex generator group 'HalfCommissioning' is only enabled if the layout
# of the geometry corresponds to the half-detector for commissioning.

#@description Depender of dependency "HalfCommissioningVtxDep"
dependencies.HalfCommissioningVtxDep.depender : string     = "vertexes:generator@HalfCommissioning"

#@description Input dependee slots of dependency "HalfCommissioningVtxDep"
dependencies.HalfCommissioningVtxDep.slots    : integer[1] = 0

#@description Logic formula of dependency "HalfCommissioningVtxDep"
dependencies.HalfCommissioningVtxDep.logic    : string     = "[0]"

# Note:
# The vertex generator group 'Shielding' is only enabled if the layout
# of the geometry has the shielding set

#@description Depender of dependency "ShieldingVtxDep"
dependencies.ShieldingVtxDep.depender : string     = "vertexes:generator@Shielding"

#@description Input dependee slots of dependency "ShieldingVtxDep"
dependencies.ShieldingVtxDep.slots    : integer[1] = 2

#@description Logic formula of dependency "ShieldingVtxDep"
dependencies.ShieldingVtxDep.logic    : string     = "[2]"

# Note:
# The vertex generator group 'Source' is only enabled if the layout
# of the geometry is basic

#@description Depender of dependency "SourceVtxDep"
dependencies.SourceVtxDep.depender : string     = "vertexes:generator@Source"

#@description Input dependee slots of dependency "SourceVtxDep"
dependencies.SourceVtxDep.slots    : integer[1] = 3

#@description Logic formula of dependency "SourceVtxDep"
dependencies.SourceVtxDep.logic    : string     = "[3]"

# Note:
# The vertex generator group 'Tracker1' is only enabled if the layout
# of the geometry is basic

#@description Depender of dependency "Tracker1VtxDep"
dependencies.Tracker1VtxDep.depender : string     = "vertexes:generator@Tracker1"

#@description Input dependee slots of dependency "Tracker1VtxDep"
dependencies.Tracker1VtxDep.slots    : integer[1] = 3

#@description Logic formula of dependency "Tracker1VtxDep"
dependencies.Tracker1VtxDep.logic    : string     = "[3]"

# Note:
# The vertex generator group 'HalfCommissioningVtxSpotLowDep' is only enabled if the layout
# of the geometry corresponds to the half-detector for commissioning.

#@description Depender of dependency "HalfCommissioningVtxSpotLowDep"
dependencies.HalfCommissioningVtxSpotLowDep.depender : string  = "vertexes:generator@HalfCommissioningSpotLow"

#@description Input dependee slots of dependency "HalfCommissioningVtxSpotLowDep"
dependencies.HalfCommissioningVtxSpotLowDep.slots    : integer[2] = 0 4

#@description Logic formula of dependency "HalfCommissioningVtxSpotLowDep"
dependencies.HalfCommissioningVtxSpotLowDep.logic    : string     = "AND([0],[4])"

# Note:
# The vertex generator group 'HalfCommissioningVtxSpotHighDep' is only enabled if the layout
# of the geometry corresponds to the half-detector for commissioning.

#@description Depender of dependency "HalfCommissioningVtxSpotHighDep"
dependencies.HalfCommissioningVtxSpotHighDep.depender : string  = "vertexes:generator@HalfCommissioningSpotHigh"

#@description Input dependee slots of dependency "HalfCommissioningVtxSpotHighDep"
dependencies.HalfCommissioningVtxSpotHighDep.slots    : integer[2] = 0 5

#@description Logic formula of dependency "HalfCommissioningVtxSpotHighDep"
dependencies.HalfCommissioningVtxSpotHighDep.logic    : string     = "AND([0],[5])"

# end of @falaise:config/snemo/demonstrator/simulation/vertexes/4.2/variants/gdm.conf